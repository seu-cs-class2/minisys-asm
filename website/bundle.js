/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./package/entry/browser.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./package/assembler.ts":
/*!******************************!*\
  !*** ./package/assembler.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * Minisys汇编解析器\r\n * by z0gSh1u @ 2020-10\r\n */\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseOneLine = exports.assemble = exports.TextSeg = exports.DataSeg = void 0;\r\nvar instruction_1 = __webpack_require__(/*! ./instruction */ \"./package/instruction.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./package/utils.ts\");\r\nvar DataSeg = /** @class */ (function () {\r\n    function DataSeg(startAddr, vars) {\r\n        this._startAddr = startAddr;\r\n        this._vars = Array.from(vars);\r\n    }\r\n    Object.defineProperty(DataSeg.prototype, \"startAddr\", {\r\n        get: function () {\r\n            return this._startAddr;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSeg.prototype, \"vars\", {\r\n        get: function () {\r\n            return this._vars;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    DataSeg.prototype.newVar = function (name, comps) {\r\n        utils_1.assert(this._vars.every(function (v) { return v.name !== name; }), '重复的变量名。');\r\n        this._vars.push({\r\n            name: name,\r\n            comps: __spreadArrays(comps),\r\n        });\r\n    };\r\n    DataSeg.prototype.newComp = function (name, comp) {\r\n        utils_1.assert(this._vars.some(function (v) { return v.name === name; }), '找不到该变量。');\r\n        this._vars[this._vars.findIndex(function (v) { return v.name === name; })].comps.push(comp);\r\n    };\r\n    return DataSeg;\r\n}());\r\nexports.DataSeg = DataSeg;\r\nvar TextSeg = /** @class */ (function () {\r\n    function TextSeg(startAddr, ins, labels) {\r\n        this._startAddr = startAddr;\r\n        this._ins = Array.from(ins);\r\n        this._labels = Array.from(labels);\r\n    }\r\n    Object.defineProperty(TextSeg.prototype, \"startAddr\", {\r\n        get: function () {\r\n            return this._startAddr;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextSeg.prototype, \"ins\", {\r\n        get: function () {\r\n            return this._ins;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextSeg.prototype, \"labels\", {\r\n        get: function () {\r\n            return this._labels;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TextSeg.prototype.toBinary = function () {\r\n        var res = '';\r\n        this._ins.forEach(function (ins) {\r\n            res += ins.toBinary() + '\\n';\r\n        });\r\n        return res;\r\n    };\r\n    return TextSeg;\r\n}());\r\nexports.TextSeg = TextSeg;\r\n/**\r\n * 解析数据段\r\n * @param asm 从.data开始，到.text的前一行\r\n */\r\nfunction parseDataSeg(asm) {\r\n    // 解析初始化值\r\n    var parseInitValue = function (init) { return init.split(/\\s*,/).map(function (v) { return v.trim(); }); };\r\n    var startAddr = asm[0].split(/\\s+/)[1] || \"0\";\r\n    utils_1.assert(asm[0].split(/\\s+/).length <= 2, '数据段首声明非法。');\r\n    var VarStartPattern = /(.+):\\s+\\.(word|byte|half|ascii|space)\\s+(.+)/;\r\n    var VarContdPattern = /\\.(word|byte|half|ascii|space)\\s+(.+)/;\r\n    var vars = [], comps = [], name;\r\n    var i = 1;\r\n    var _loop_1 = function () {\r\n        if (VarStartPattern.test(asm[i])) {\r\n            // 一个新变量开始\r\n            if (name !== void 0) {\r\n                vars.push({\r\n                    name: name,\r\n                    comps: comps,\r\n                });\r\n                comps = [];\r\n                name = void 0;\r\n            }\r\n            name = RegExp.$1;\r\n            var type_1 = RegExp.$2;\r\n            parseInitValue(RegExp.$3).forEach(function (val) {\r\n                comps.push({\r\n                    type: type_1,\r\n                    val: val,\r\n                });\r\n            });\r\n        }\r\n        else if (VarContdPattern.test(asm[i])) {\r\n            // 变量组分继续\r\n            var type_2 = RegExp.$1;\r\n            parseInitValue(RegExp.$2).forEach(function (val) {\r\n                comps.push({\r\n                    type: type_2,\r\n                    val: val,\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            utils_1.assert(false, \"\\u672A\\u77E5\\u7684\\u53D8\\u91CF\\u5B9A\\u4E49\\u5F62\\u5F0F\\uFF0C\\u6570\\u636E\\u6BB5\\u884C\\u53F7: \" + (i + 1));\r\n        }\r\n        if (i === asm.length - 1) {\r\n            vars.push({\r\n                name: name,\r\n                comps: comps,\r\n            });\r\n        }\r\n        i++;\r\n    };\r\n    do {\r\n        _loop_1();\r\n    } while (i < asm.length);\r\n    return new DataSeg(startAddr, vars);\r\n}\r\n/**\r\n * 解析代码段\r\n * @param asm .text起，到代码段结束\r\n */\r\nfunction parseTextSeg(asm_) {\r\n    var asm = Array.from(asm_);\r\n    var startAddr = asm[0].split(/\\s+/)[1] || \"0\";\r\n    utils_1.assert(asm[0].split(/\\s+/).length <= 2, '代码段首声明非法。');\r\n    // 先提取掉所有的label\r\n    var labels = [];\r\n    asm = asm.map(function (v, i) {\r\n        if (i === 0)\r\n            return v;\r\n        if (/(\\w+):\\s*(.+)/.test(v)) {\r\n            utils_1.assert(labels.every(function (label) { return label.name !== RegExp.$1; }), \"\\u5B58\\u5728\\u91CD\\u590D\\u7684label: \" + RegExp.$1);\r\n            // FIXME: 地址4字节对齐？\r\n            labels.push({ name: RegExp.$1, lineno: i, addr: utils_1.getOffsetAddr(startAddr, utils_1.getOffset({ instruction: i - 1 })) });\r\n            return RegExp.$2;\r\n        }\r\n        return v;\r\n    });\r\n    var ins = [];\r\n    asm.forEach(function (v, i) {\r\n        i !== 0 && ins.push(parseOneLine(v, i));\r\n    });\r\n    return new TextSeg(startAddr, ins, labels);\r\n}\r\n/**\r\n * 汇编！\r\n * @param asm_ 汇编代码\r\n */\r\nfunction assemble(asm_) {\r\n    // 格式化之。去掉空行；CRLF均变LF；均用单个空格分分隔；逗号后带空格\r\n    var asm = asm_\r\n        .replace(/\\r\\n/g, '\\n')\r\n        .replace(/#(.*)\\n/g, '\\n')\r\n        .replace(/:\\s*\\n/g, ': ')\r\n        .split('\\n')\r\n        .filter(function (x) { return x.trim(); })\r\n        .map(function (x) { return x.trim().replace(/\\s+/g, ' ').replace(/,\\s*/, ', ').toLowerCase(); });\r\n    var dataSegStartLine = asm.findIndex(function (v) { return v.match(/\\.data/); });\r\n    var textSegStartLine = asm.findIndex(function (v) { return v.match(/\\.text/); });\r\n    utils_1.assert(dataSegStartLine !== -1, '未找到数据段开始。');\r\n    utils_1.assert(textSegStartLine !== -1, '未找到代码段开始。');\r\n    utils_1.assert(dataSegStartLine < textSegStartLine, '数据段不能位于代码段之后。');\r\n    // 解析数据段\r\n    var dataSeg = parseDataSeg(asm.slice(dataSegStartLine, textSegStartLine));\r\n    // 解析代码段\r\n    var textSeg = parseTextSeg(asm.slice(textSegStartLine));\r\n    return {\r\n        dataSeg: dataSeg,\r\n        textSeg: textSeg,\r\n    };\r\n}\r\nexports.assemble = assemble;\r\n/**\r\n * 解析单行汇编到Instruction对象\r\n */\r\nfunction parseOneLine(asm, lineno) {\r\n    // 处理助记符\r\n    utils_1.assert(/^\\s*(\\w+)\\s+(.*)/.test(asm), \"\\u6CA1\\u6709\\u627E\\u5230\\u6307\\u4EE4\\u52A9\\u8BB0\\u7B26\\uFF0C\\u5728\\u7B2C \" + lineno + \" \\u884C\\u3002\");\r\n    var symbol = RegExp.$1;\r\n    asm = utils_1.serialString(RegExp.$2);\r\n    var instructionIndex = instruction_1.MinisysInstructions.findIndex(function (x) { return x.symbol == symbol; });\r\n    utils_1.assert(instructionIndex !== -1, \"\\u6CA1\\u6709\\u627E\\u5230\\u6307\\u4EE4\\u52A9\\u8BB0\\u7B26\\uFF1A\" + symbol + \"\\uFF0C\\u5728\\u7B2C \" + lineno + \" \\u884C\\u3002\");\r\n    var res = instruction_1.Instruction.newInstance(instruction_1.MinisysInstructions[instructionIndex]);\r\n    utils_1.assert(res.insPattern.test(asm), \"\\u7B2C \" + lineno + \" \\u884C\\u6307\\u4EE4\\u53C2\\u6570\\u4E0D\\u5339\\u914D\\uFF1A\" + asm);\r\n    res.components.forEach(function (component) {\r\n        var arg;\r\n        if (!component.val.trim()) {\r\n            arg = component.toBin();\r\n            // TODO: 目前暂未支持label和变量名的转换\r\n            res.setComponent(component.desc, arg);\r\n        }\r\n    });\r\n    return res;\r\n}\r\nexports.parseOneLine = parseOneLine;\r\n\n\n//# sourceURL=webpack:///./package/assembler.ts?");

/***/ }),

/***/ "./package/entry/browser.ts":
/*!**********************************!*\
  !*** ./package/entry/browser.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar assembler_1 = __webpack_require__(/*! ../assembler */ \"./package/assembler.ts\");\r\nvar lastModifiedInfo = \"\";\r\n// @ts-ignore\r\nvar editor = window.editor;\r\nfunction $(selector) {\r\n    return document.querySelector(selector);\r\n}\r\nfunction setStatus(to, trace) {\r\n    var statusBackDOM = $('.status');\r\n    var statusDOM = $('#asm-status');\r\n    var traceDOM = $('#asm-failTrace');\r\n    var successColor = '#cf9';\r\n    var failColor = '#f99';\r\n    if (to === 'success') {\r\n        statusBackDOM.style.background = successColor;\r\n        statusDOM.innerText = '成功';\r\n        traceDOM.innerText = '';\r\n    }\r\n    else if (to === 'fail') {\r\n        statusBackDOM.style.background = failColor;\r\n        statusDOM.innerText = '失败';\r\n        traceDOM.innerText = trace || '';\r\n    }\r\n}\r\nfunction assembleBrowser() {\r\n    var resultDOM = $('#asm-result');\r\n    var asmCode = editor.getValue();\r\n    try {\r\n        var result = assembler_1.assemble(asmCode);\r\n        var binary = result.textSeg.toBinary();\r\n        resultDOM.value = binary;\r\n        setStatus('success');\r\n    }\r\n    catch (ex) {\r\n        setStatus('fail', ex);\r\n        console.log(ex);\r\n        resultDOM.value = '';\r\n    }\r\n}\r\nwindow.addEventListener('load', function () {\r\n    $('#asm-assemble').onclick = assembleBrowser;\r\n    $('#asm-download-coe').onclick = function () {\r\n        alert('该功能暂未支持。');\r\n    };\r\n    $('#asm-download-txt').onclick = function () {\r\n        alert('该功能暂未支持。');\r\n    };\r\n    $('#asm-lastModified').innerHTML = lastModifiedInfo;\r\n});\r\n\n\n//# sourceURL=webpack:///./package/entry/browser.ts?");

/***/ }),

/***/ "./package/instruction.ts":
/*!********************************!*\
  !*** ./package/instruction.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * Minisys指令定义\r\n * by z0gSh1u @ 2020-10\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MinisysInstructions = exports.Instruction = void 0;\r\nvar register_1 = __webpack_require__(/*! ./register */ \"./package/register.ts\");\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./package/utils.ts\");\r\n// 指令类\r\nvar Instruction = /** @class */ (function () {\r\n    function Instruction(symbol, desc, pseudo, insPattern, components) {\r\n        this._symbol = symbol;\r\n        this._desc = desc;\r\n        this._pseudo = pseudo;\r\n        this._insPattern = insPattern;\r\n        this._components = components.concat();\r\n    }\r\n    Instruction.newInstance = function (baseOn) {\r\n        return new Instruction(baseOn.symbol, baseOn.desc, baseOn.pseudo, baseOn.insPattern, baseOn.components);\r\n    };\r\n    Object.defineProperty(Instruction.prototype, \"symbol\", {\r\n        get: function () {\r\n            return this._symbol;\r\n        },\r\n        set: function (symbol) {\r\n            this._symbol = symbol;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Instruction.prototype, \"desc\", {\r\n        get: function () {\r\n            return this._desc;\r\n        },\r\n        set: function (desc) {\r\n            this._desc = desc;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Instruction.prototype, \"pseudo\", {\r\n        get: function () {\r\n            return this._pseudo;\r\n        },\r\n        set: function (pseudo) {\r\n            this._pseudo = pseudo;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Instruction.prototype, \"insPattern\", {\r\n        get: function () {\r\n            return this._insPattern;\r\n        },\r\n        set: function (insPattern) {\r\n            this._insPattern = insPattern;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Instruction.prototype, \"components\", {\r\n        get: function () {\r\n            return this._components;\r\n        },\r\n        set: function (components) {\r\n            this._components = components;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Instruction.prototype.setComponent = function (desc, val) {\r\n        var index = this._components.findIndex(function (v) { return v.desc == desc; });\r\n        utils_1.assert(index !== -1, \"\\u672A\\u77E5\\u7684\\u6307\\u4EE4\\u7EC4\\u5206: \" + desc);\r\n        this._components[index].val = val;\r\n    };\r\n    Instruction.prototype.toBinary = function () {\r\n        if (this._components.some(function (v) { return !v.val.trim(); })) {\r\n            throw new Error('尝试将不完整的指令转为2或16进制。');\r\n        }\r\n        return this._components.map(function (v) { return v.val; }).join('');\r\n    };\r\n    Instruction.prototype.toHex = function (zeroX) {\r\n        if (zeroX === void 0) { zeroX = true; }\r\n        return utils_1.binToHex(this.toBinary(), zeroX);\r\n    };\r\n    return Instruction;\r\n}());\r\nexports.Instruction = Instruction;\r\n// Minisys指令集\r\nexports.MinisysInstructions = (function () {\r\n    var _MinisysInstructions = [];\r\n    // 新增指令\r\n    function newInstruction(symbol, desc, pseudo, insPattern, components) {\r\n        _MinisysInstructions.push(new Instruction(symbol, desc, pseudo, insPattern, components.map(function (x) { return ({\r\n            lBit: x[0],\r\n            rBit: x[1],\r\n            desc: x[2],\r\n            toBin: x[3],\r\n            type: x[4],\r\n            val: x[5],\r\n        }); })));\r\n    }\r\n    /**\r\n   * 获取指令正则模式\r\n   * @param params 汇编指令的参数个数\r\n   */\r\n    function paramPattern(num) {\r\n        if (num < 1) {\r\n            return /^$/;\r\n        }\r\n        else {\r\n            return new RegExp('^' + '([\\\\w$-]+),'.repeat(num - 1) + '([\\\\w$-]+)$');\r\n        }\r\n    }\r\n    // =================== R型指令 ===================\r\n    newInstruction('add', '按字加法', '(rd)←(rs)+(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100000'],\r\n    ]);\r\n    newInstruction('addu', '无符号加', '(rd)←(rs)+(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100001'],\r\n    ]);\r\n    newInstruction('sub', '按字减法', '(rd)←(rs)-(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100010'],\r\n    ]);\r\n    newInstruction('subu', '无符号减', '(rd)←(rs)-(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100011'],\r\n    ]);\r\n    newInstruction('and', '按位与', '(rd)←(rs)&(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100100'],\r\n    ]);\r\n    newInstruction('mult', '按字乘法', '(HI,LO)←(rs)*(rt)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 6, 'rd+shamt', function () { }, 'fixed', '0000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '011000'],\r\n    ]);\r\n    newInstruction('multu', '无符号乘', '(HI,LO)←(rs)*(rt)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 6, 'rd+shamt', function () { }, 'fixed', '0000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '011001'],\r\n    ]);\r\n    newInstruction('div', '除法', '(HI)←(rs)%(rt), (LO)←(rs)/(rt)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 6, 'rd+shamt', function () { }, 'fixed', '0000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '011010'],\r\n    ]);\r\n    newInstruction('divu', '无符号除', '(HI)←(rs)%(rt), (LO)←(rs)/(rt)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 6, 'rd+shamt', function () { }, 'fixed', '0000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '011011'],\r\n    ]);\r\n    newInstruction('mfhi', '取HI', '(rd)←(HI)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 16, 'rs+rt', function () { }, 'fixed', '0000000000'],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '010000'],\r\n    ]);\r\n    newInstruction('mflo', '取LO', '(rd)←(LO)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 16, 'rs+rt', function () { }, 'fixed', '0000000000'],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '010010'],\r\n    ]);\r\n    newInstruction('mthi', '存HI', '(HI)←(rs)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 6, 'rt+rd+shamt', function () { }, 'fixed', '000000000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '010001'],\r\n    ]);\r\n    newInstruction('mtlo', '存LO', '(LO)←(rs)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 6, 'rt+rd+shamt', function () { }, 'fixed', '000000000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '010011'],\r\n    ]);\r\n    // 注意MFC0和MTC0的特殊性\r\n    newInstruction('mfc0', '取C0', '(rt)=由(rd)和sel确定的C0寄存器的值', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '010000'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00000'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { return utils_1.literalToBin(RegExp.$3, 6); }, 'c0sel', ''],\r\n    ]);\r\n    newInstruction('mtc0', '存C0', '由(rd)和sel确定的C0寄存器的值=(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '010000'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00100'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { return utils_1.literalToBin(RegExp.$3, 6); }, 'c0sel', ''],\r\n    ]);\r\n    newInstruction('or', '按位或', '(rd)←(rs)|(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100101'],\r\n    ]);\r\n    newInstruction('xor', '按位异或', '(rd)←(rs)^(rt)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100110'],\r\n    ]);\r\n    newInstruction('nor', '按位或非', '(rd)←~((rs)|(rt))', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '100111'],\r\n    ]);\r\n    newInstruction('slt', '有符号比较', 'if (rs<rt) rd=1 else rd=0', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '101010'],\r\n    ]);\r\n    newInstruction('sltu', '无符号比较', 'if (rs<rt) rd=1 else rd=0', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '101011'],\r\n    ]);\r\n    newInstruction('sll', '逻辑左移', '(rd)←(rt)<<shamt', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00000'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { return utils_1.literalToBin(RegExp.$3, 5); }, 'shamt', ''],\r\n        [5, 0, 'func', function () { }, 'fixed', '000000'],\r\n    ]);\r\n    newInstruction('srl', '逻辑右移', '(rd)←(rt)>>_L shamt', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00000'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { return utils_1.literalToBin(RegExp.$3, 5); }, 'shamt', ''],\r\n        [5, 0, 'func', function () { }, 'fixed', '000010'],\r\n    ]);\r\n    newInstruction('sra', '算术右移', '(rd)←(rt)>>_A shamt', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00000'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { return utils_1.literalToBin(RegExp.$3, 5); }, 'shamt', ''],\r\n        [5, 0, 'func', function () { }, 'fixed', '000011'],\r\n    ]);\r\n    newInstruction('sllv', '逻辑左移V', '(rd)←(rt)<<(rs)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '000100'],\r\n    ]);\r\n    newInstruction('srlv', '逻辑右移V', '(rd)←(rt)>>_L (rs)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '000110'],\r\n    ]);\r\n    newInstruction('srav', '算术右移V', '(rd)←(rt)>>_L (rs)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '000111'],\r\n    ]);\r\n    newInstruction('jr', '无条件跳转（寄存器）', '(PC)←(rs)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 6, 'rt+rd+shamt', function () { }, 'fixed', '000000000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '001000'],\r\n    ]);\r\n    newInstruction('jalr', '暂存下条后跳转（寄存器）', '(rd)=(PC)+4,(PC)←(rs)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '00000'],\r\n        [15, 11, 'rd', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [10, 6, 'shamt', function () { }, 'fixed', '00000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '001001'],\r\n    ]);\r\n    newInstruction('break', '断点异常', '断点异常', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 6, 'code', function () { return utils_1.literalToBin(RegExp.$1, 20); }, 'code', ''],\r\n        [5, 0, 'func', function () { }, 'fixed', '001101'],\r\n    ]);\r\n    newInstruction('syscall', '系统调用', '系统调用', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000000'],\r\n        [25, 6, 'code', function () { return utils_1.literalToBin(RegExp.$1, 20); }, 'code', ''],\r\n        [5, 0, 'func', function () { }, 'fixed', '001100'],\r\n    ]);\r\n    newInstruction('eret', '从中断或者异常中返回', '从中断或者异常中返回', paramPattern(0), [\r\n        [31, 26, 'op', function () { }, 'fixed', '010000'],\r\n        [25, 6, 'rs+rt+rd+shamt', function () { }, 'fixed', '10000000000000000000'],\r\n        [5, 0, 'func', function () { }, 'fixed', '011000'],\r\n    ]);\r\n    // =================== I型指令 ===================\r\n    newInstruction('addi', '加立即数', '(rt)←(rs)+(sign-extend)immediate', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16, true); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('addiu', '无符号加立即数', '(rt)←(rs)+(sign-extend)immediate', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16, true); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('andi', '按位与立即数', '(rt)←(rs)&(zero-extend)immediate', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001100'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('ori', '按位或立即数', '(rt)←(rs)|(zero-extend)immediate', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001101'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('xori', '按位异或立即数', '(rt)←(rs)^(zero-extend)immediate', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001110'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('lui', '取立即数高16位', '(rt)←immediate<<16 & 0FFFF0000H', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001111'],\r\n        [25, 21, 'rs', function () { }, 'fixed', '00000'],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('lb', '取字节', '(rt)←(Sign-Extend)Memory[(rs)+(sign_extend)offset]', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '100000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('lbu', '取无符号字节', '(rt)←(Zero-Extend)Memory[(rs)+(sign_extend)offset]', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '100100'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('lh', '取半字', '(rt)←(Sign-Extend)Memory[(rs)+(sign_extend)offset]', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '100001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('lhu', '取无符号半字', '(rt)←(Zero-Extend)Memory[(rs)+(sign_extend)offset]', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '100101'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('sb', '存字节', 'Memory[(rs)+(sign_extend)offset]←(rt)7..0', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '101000'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('sh', '存半字', 'Memory[(rs)+(sign_extend)offset]←(rt)15..0', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '101001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('lw', '取字', '(rt)←Memory[(rs)+(sign_extend)offset]', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '100011'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('sw', '存字', 'Memory[(rs)+(sign_extend)offset]←(rt)', /^([\\w$-]+),([\\w-]+)\\(([\\w$-]+)\\)$/, [\r\n        [31, 26, 'op', function () { }, 'fixed', '101011'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$3); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 16, true); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('beq', '相等分支', 'if ((rt)=(rs)) then (PC)←(PC)+4+((Sign-Extend)offset<<2)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000100'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$3, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bne', '不等分支', 'if ((rt)≠(rs)) then (PC)←(PC)+4+((Sign-Extend)offset<<2)', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000101'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$3, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bgez', '大于等于0分支', 'if ((rs)≥0) then (PC)←(PC)+4+((Sign-Extend)offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '00001'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bgtz', '大于0分支', 'if ((rs)＞0) then (PC)←(PC)+4+((Sign-Extend)offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000111'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '00000'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('blez', '小于等于0分支', 'if ((rs)≤0) then (PC)←(PC)+4+((Sign-Extend) offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000110'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '00000'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bltz', '小于0分支', 'if ((rs)＜0) then (PC)←(PC)+4+((Sign-Extend) offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000111'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '00000'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bgezal', '大于等于0分支（Link）', 'if ((rs)≥0) then ($31)←(PC)+4,(PC)←(PC)+4+((Sign-Extend) offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '10001'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('bltzal', '小于0分支（Link）', 'if ((rs)＜0) then ($31)←(PC)+4,(PC)←(PC)+4+((Sign-Extend) offset<<2)', paramPattern(2), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000001'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { }, 'fixed', '10000'],\r\n        [15, 0, 'offset', function () { return utils_1.literalToBin(RegExp.$2, 18, true).slice(-18, -2); }, 'offset', ''],\r\n    ]);\r\n    newInstruction('slti', '小于立即数时Set', 'if ((rs)<(Sign-Extend)immediate) then (rt)←1; else (rt)←0', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001010'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16, true); }, 'immed', ''],\r\n    ]);\r\n    newInstruction('sltiu', '小于立即数时Set（无符号）', 'if ((rs)<(Zero-Extend)immediate) then (rt)←1; else (rt)←0', paramPattern(3), [\r\n        [31, 26, 'op', function () { }, 'fixed', '001011'],\r\n        [25, 21, 'rs', function () { return register_1.regToBin(RegExp.$2); }, 'reg', ''],\r\n        [20, 16, 'rt', function () { return register_1.regToBin(RegExp.$1); }, 'reg', ''],\r\n        [15, 0, 'immediate', function () { return utils_1.literalToBin(RegExp.$3, 16); }, 'immed', ''],\r\n    ]);\r\n    // =================== J型指令 ===================\r\n    newInstruction('j', '无条件跳转', '(PC)←((Zero-Extend)address<<2)', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000010'],\r\n        [25, 0, 'target', function () { return utils_1.literalToBin(RegExp.$2, 18).slice(-18, -2); }, 'addr', ''],\r\n    ]);\r\n    newInstruction('jal', '暂存下条后跳转（立即数）', '($31)←(PC)+4; (PC)←((Zero-Extend)address<<2),', paramPattern(1), [\r\n        [31, 26, 'op', function () { }, 'fixed', '000011'],\r\n        [25, 0, 'target', function () { return utils_1.literalToBin(RegExp.$2, 18).slice(-18, -2); }, 'addr', ''],\r\n    ]);\r\n    // =================== NOP指令 ===================\r\n    newInstruction('nop', '空转指令', 'do nothing', paramPattern(0), [[31, 0, 'NOP', function () { }, 'fixed', '0'.repeat(32)]]);\r\n    return _MinisysInstructions;\r\n})();\r\n\n\n//# sourceURL=webpack:///./package/instruction.ts?");

/***/ }),

/***/ "./package/register.ts":
/*!*****************************!*\
  !*** ./package/register.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n * Minisys寄存器定义\r\n * by z0gSh1u @ 2020-10\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.regToBin = void 0;\r\nvar utils_1 = __webpack_require__(/*! ./utils */ \"./package/utils.ts\");\r\n// prettier-ignore\r\nvar registerNames = [\r\n    'zero', 'at',\r\n    'v0', 'v1',\r\n    'a0', 'a1', 'a2', 'a3',\r\n    't0', 't1', 't2', 't3', 't4', 't5', 't6', 't7',\r\n    's0', 's1', 's2', 's3', 's4', 's5', 's6', 's7',\r\n    'k0', 'k1',\r\n    'gp', 'sp', 'fp',\r\n    'ra',\r\n];\r\n/**\r\n * 返回寄存器对应的二进制号（5位）\r\n * @example reg: $1 1 sp $sp\r\n */\r\nfunction regToBin(reg) {\r\n    reg = reg.replace('$', '').trim();\r\n    var regNumber;\r\n    if (reg.match(/^\\d+$/)) {\r\n        regNumber = Number(reg);\r\n    }\r\n    else {\r\n        regNumber = registerNames.indexOf(reg);\r\n    }\r\n    if (regNumber > 31 || regNumber < 0) {\r\n        throw new Error(\"\\u65E0\\u6548\\u7684\\u5BC4\\u5B58\\u5668: \" + reg);\r\n    }\r\n    return utils_1.decToBin(regNumber, 5);\r\n}\r\nexports.regToBin = regToBin;\r\n\n\n//# sourceURL=webpack:///./package/register.ts?");

/***/ }),

/***/ "./package/utils.ts":
/*!**************************!*\
  !*** ./package/utils.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getOffsetAddr = exports.getOffset = exports.serialString = exports.hexToBin = exports.hexToDec = exports.decToHex = exports.binToHex = exports.decToBin = exports.literalToBin = exports.assert = void 0;\r\n/**\r\n * Ensure `ensure`, else throw `Error(hint)`.\r\n */\r\nfunction assert(ensure, hint) {\r\n    if (!ensure) {\r\n        throw new Error(hint);\r\n    }\r\n}\r\nexports.assert = assert;\r\n/**\r\n * 把字面量数字转换为二进制\r\n * @example 10\r\n * @example 0xabcd\r\n */\r\n// FIXME: 符号扩展不正确\r\nfunction literalToBin(literal, len, isSignExtend) {\r\n    if (isSignExtend === void 0) { isSignExtend = false; }\r\n    if (literal.startsWith('0x')) {\r\n        var num = hexToBin(literal);\r\n        return num.padStart(len, isSignExtend ? num[0] : '0');\r\n    }\r\n    else {\r\n        return decToBin(parseInt(literal), len, isSignExtend);\r\n    }\r\n}\r\nexports.literalToBin = literalToBin;\r\n/**\r\n * 将十进制数转为二进制，用pad补齐到len位\r\n */\r\nfunction decToBin(dec, len, isSignExtend) {\r\n    if (isSignExtend === void 0) { isSignExtend = false; }\r\n    var num = '';\r\n    if (dec < 0) {\r\n        num = '1' + (-dec - 1).toString(2).split('').map(function (v) { return String.fromCharCode(v.charCodeAt(0) ^ 1); }).join('');\r\n    }\r\n    else {\r\n        num = '0' + dec.toString(2);\r\n    }\r\n    return num.padStart(len, isSignExtend ? num[0] : '0');\r\n}\r\nexports.decToBin = decToBin;\r\n/**\r\n * 将4n位二进制转为n位十六进制\r\n */\r\nfunction binToHex(bin, zeroX) {\r\n    if (zeroX === void 0) { zeroX = true; }\r\n    if (bin.length % 4 !== 0) {\r\n        throw new Error('二进制位数不为4的倍数。');\r\n    }\r\n    return (['', '0x'][Number(zeroX)] +\r\n        bin\r\n            .match(/\\d{4}/g) // [1000, 1000]\r\n            .map(function (v) { return '0123456789abcdef'.charAt(parseInt(v, 2)); })\r\n            .join(''));\r\n}\r\nexports.binToHex = binToHex;\r\n/**\r\n * 将十进制数转为十六进制，十进制数会先被转换为4n位二进制\r\n */\r\nfunction decToHex(dec, len, zeroX) {\r\n    if (zeroX === void 0) { zeroX = true; }\r\n    return binToHex(decToBin(dec, len, false), zeroX);\r\n}\r\nexports.decToHex = decToHex;\r\n/**\r\n * 十六进制转十进制\r\n */\r\nfunction hexToDec(hex) {\r\n    return parseInt(hex, 16);\r\n}\r\nexports.hexToDec = hexToDec;\r\n/**\r\n * 将十六进制每位转换为4位二进制，参数带不带0x头都可以\r\n */\r\nfunction hexToBin(hex) {\r\n    if (hex.startsWith('0x')) {\r\n        hex = hex.substr(2);\r\n    }\r\n    var table = Array(16)\r\n        .fill('')\r\n        .map(function (_, i) { return decToBin(i, 4, false); });\r\n    var res = '';\r\n    hex.split('').forEach(function (v) {\r\n        res += table['0123456789abcdef'.indexOf(v)];\r\n    });\r\n    return res;\r\n}\r\nexports.hexToBin = hexToBin;\r\n/**\r\n * 去除一串字符串中的全部空格\r\n */\r\nfunction serialString(bin) {\r\n    return bin.replace(/\\s+/g, '');\r\n}\r\nexports.serialString = serialString;\r\n/**\r\n * 算地址偏移量\r\n */\r\nfunction getOffset(holder) {\r\n    var WORD_LEN = 4;\r\n    var HALF_LEN = WORD_LEN / 2;\r\n    var BYTE_LEN = 1;\r\n    var INS_LEN = WORD_LEN;\r\n    return ((holder.byte || 0) * BYTE_LEN +\r\n        (holder.half || 0) * HALF_LEN +\r\n        (holder.word || 0) * WORD_LEN +\r\n        (holder.space || 0) +\r\n        (holder.instruction || 0) * INS_LEN);\r\n}\r\nexports.getOffset = getOffset;\r\n/**\r\n * 算偏移后的地址\r\n * @param baseAddr 基地址，十六进制或十进制\r\n */\r\nfunction getOffsetAddr(baseAddr, offsetBit) {\r\n    var base = baseAddr.startsWith('0x') ? hexToDec(baseAddr) : Number(baseAddr);\r\n    return base + offsetBit;\r\n}\r\nexports.getOffsetAddr = getOffsetAddr;\r\n\n\n//# sourceURL=webpack:///./package/utils.ts?");

/***/ })

/******/ });